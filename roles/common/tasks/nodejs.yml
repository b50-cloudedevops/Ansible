#- name: Configure the Yum repos 
#  ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash 

#- name: Install NodeJs 
#  ansible.builtin.package:
#    name: "{{item}}"
#    state: present 
#  loop: 
#    - nodejs 
#    - gcc-c++ 

#- name: Creating application user 
#  ansible.builtin.user:
#    name: "{{APPUSER}}"
#    comment: Roboshop Application user 

#- name: Cleanup of old component
#  ansible.builtin.file:
#   path: /home/{{APPUSER}}/{{COMPONENT}}/
#   state: absent 

#- name: Downloading {{COMPONENT}} 
#  ansible.builtin.unarchive:
#     src: https://github.com/stans-robot-project/{{COMPONENT}}/archive/main.zip
#     dest: /tmp 
#     remote_src: yes 

#- name: copying {{COMPONENT}} to {{APPUSER}}
#  ansible.builtin.copy:
#    src: /tmp/{{COMPONENT}}-main/
#    dest: /home/{{APPUSER}}/{{COMPONENT}}/
#    remote_src: yes
#  become_user: "{{APPUSER}}"

#- name: Install NodeJS packages based on package.json file
#  community.general.npm: 
#     path: /home/{{APPUSER}}/{{COMPONENT}}/ 

#- name: Copying systemd file 
#  ansible.builtin.copy:
#    src: systemd.service
#    dest: /etc/systemd/system/{{COMPONENT}}.service 

#- name: Starting {{COMPONENT}} service 
#  ansible.builtin.systemd:
#    name: "{{COMPONENT}}"
#    state: restarted 
#    enabled: yes 
#    daemon-reload: yes 
    
#- name: Configuring the {{COMPONENT}} svc 
#  ansible.builtin.include_role: 
#    - name: common 
#      tasks_from: system-start-svc 
- name: Configure the Yum Repos 
  ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash  

- name: Install NodeJS 
  ansible.builtin.package:
    name: "{{item}}"
    state: present  
  loop: 
    - nodejs 
    - gcc-c++  
# - name: Creating application user
#   ansible.builtin.user:
#     name: "{{APPUSER}}" 
#     comment: Roboshop Application User

- name: Creating application user
  ansible.builtin.include_role:
    name: common 
    tasks_from: create-user

- name: Cleanup of old component 
  ansible.builtin.file:
    path: /home/{{APPUSER}}/{{COMPONENT}}/
    state: absent

- name: Download and extract {{COMPONENT}}
  ansible.builtin.include_role:
    name: common 
    tasks_from: download-and-extract 


## ****** Uncomment only if you wish to do the deployments by taking the code from GitHub ******* 

# - name:  Download and extract {{COMPONENT}}
#   ansible.builtin.include_role:
#     name: common 
#     tasks_from: download-and-extract 

# - name: Coping {{COMPONENT}} to {{APPUSER}}
#   ansible.builtin.copy:
#     src: /tmp/{{COMPONENT}}-main/
#     dest: /home/{{APPUSER}}/{{COMPONENT}}/
#     remote_src: yes
#   become_user: "{{APPUSER}}"

# - name: Install NodeJS packages based on package.json file 
#   community.general.npm:
#     path: /home/{{APPUSER}}/{{COMPONENT}}/  

# - name: Coping systemd file 
#   ansible.builtin.copy:
#     src: systemd.service
#     dest: /etc/systemd/system/{{COMPONENT}}.service 

# - name: Starting {{COMPONENT}} Service 
#   ansible.builtin.systemd:
#     name: "{{COMPONENT}}" 
#     state: restarted
#     enabled: yes
#     daemon_reload: yes

- name: Configuring the {{COMPONENT}} svc
  ansible.builtin.include_role:
    name: common 
    tasks_from: systemd-start-svc

- name: Configuing system name 
  ansible.builtin.include_role:
    name: common 
    tasks_from: set-hostname

