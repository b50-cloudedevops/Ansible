- name: Coping {{COMPONENT}} repo file 
  ansible.builtin.copy:
    src: mysql.repo 
    dest: /etc/yum.repos.d/mongodb.repo  

- name: Installing {{COMPONENT}}
  ansible.builtin.yum:
    name: 
      - mysql-community-server
      - MySQL-python
    state: present 
  
- name: Starting {{COMPONENT}} Service 
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: yes
# This has to fetch the password only when the default password is not changed

- name: Check the {{COMPONENT}} password by fetching from the logs 
  community.mysql.mysql_info:
    login_user: root 
    login_password: RoboShop@1 
  ignore_errors: yes  
  register: mysql_stat 

# This will only be executed only if the above is a failure
- name: Reset Password 
  when: mysql_stat.failed 
  block: 
    - name: Fetching password 
      ansible.builtin.shell: grep "temporary" /var/log/mysqld.log | head -n 1 | awk -F " " '{print $NF}'
      register: DEFAULT_ROOT_PASSWORD

    - name: Copy the SQL Password Command File 
      ansible.builtin.copy: 
        src: rootpassword.sql 
        dest: /tmp/rootpassword.sql 
    # This task should only execture if the above task is a failure.
    - name: Changing password 
      ansible.builtin.shell: mysql --connect-expired-password  -uroot -p"{{DEFAULT_ROOT_PASSWORD.stdout}}" < /tmp/rootpassword.sql 

- name: Checking the validate_password plugin 
  ansible.builtin.shell: echo show plugins | mysql -uroot -pRoboShop@1 | grep validate_password 
  register: PLUGIN_INFO 
  ignore_errors: yes 

# This task should only execture if the above task is a failure: Which means plugin exists 
- name: Uninstalling the plugin  
  when: PLUGIN_INFO.rc == 0 
  block: 
    - name: Copy the SQL Unistall Password Plugin file 
      ansible.builtin.copy: 
        src: password-validate.sql
        dest: /tmp/password-validate.sql

    - name: Uninstalling the Plugin 
      ansible.builtin.shell: mysql --connect-expired-password  -uroot -pRoboShop@1 < /tmp/password-validate.sql

- name:  Download and extract {{COMPONENT}}
  ansible.builtin.include_role:
    name: common 
    tasks_from: download-and-extract   

- name: Load the {{COMPONENT}} schema 
  community.mysql.mysql_db:
    state: import
    login_user: root 
    login_password: RoboShop@1
    name: all 
    target: /tmp/mysql-main/shipping.sql 

    
    #If you don't mention this, by def it calls main.yml 
# 07-MySql

# MySQL is the database service that is needed for the application. So we need to install it and configure it for the application to work.

# ## **Manual Steps to Install MySQL**

# As per the Application need, we are choosing MySQL 5.7 version.

# 1. Setup MySQL Repo

# ```bash
# # curl -s -L -o /etc/yum.repos.d/mysql.repo https://raw.githubusercontent.com/stans-robot-project/mysql/main/mysql.repo
# ```

# 1. Install MySQL

# ```bash
# # yum install mysql-community-server -y
# ```

# 1. Start MySQL.

# ```bash
# # systemctl enable mysqld 
# # systemctl start mysqld
# ```

# 1. Now a default root password will be generated and can be seen in the log file.

# ```bash
# # grep temp /var/log/mysqld.log
# ( Copy that password )
# ```

# 1. Next, We need to change the default root password in order to start using the database service. Use password as `RoboShop@1` . Rest of the options you can choose `No`

# ```bash
# # mysql_secure_installation
# ```

# 1. You can check whether the new password is working or not using the following command in MySQL

# First let's connect to MySQL

# ```bash
# # mysql -uroot -pRoboShop@1
# ```

# Once after login to MySQL prompt then run this SQL Command. This will uninstall the password validation feature like number of characters, password length, complexty and all. As I don’t want that I’d be uninstalling the `validate_password` plugin

# ```sql
# > uninstall plugin validate_password;
# ```

# ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/584e54a9-29fa-4246-9655-e5666a18119b/Untitled.png)

# ## **Setup Needed for Application.**

# As per the architecture diagram, MySQL is needed by

# - Shipping Service

# So we need to load that schema into the database, So those applications will detect them and run accordingly.

# To download schema, Use the following command

# ```bash
# # curl -s -L -o /tmp/mysql.zip "https://github.com/stans-robot-project/mysql/archive/main.zip"
# ```

# Load the schema for mysql. This file contains the list of COUNTRIES, CITIES and their PINCODES. This will be helpful in doing the shipping charges calculation which is based on the distance the product is shippied